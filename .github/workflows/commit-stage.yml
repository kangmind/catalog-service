name: Commit Stage
on: push


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: kangmind/catalog-service
  VERSION: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      # 检出代码
      - name: Checkout source code
        uses: actions/checkout@v4

      # 设置 JDK 环境和 Maven
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven  # 使用 Maven 的缓存

      # 使用 Maven 构建项目并运行单元测试与集成测试
      - name: Build, unit tests and integration tests
        run: mvn clean package -DskipTests=true

#      # 代码漏洞扫描
#      - name: Code vulnerability scanning
#        uses: anchore/scan-action@v3
#        id: scan
#        with:
#          path: "${{ github.workspace }}"
#          fail-build: false
#          severity-cutoff: high

#      # 上传漏洞报告
#      - name: Upload vulnerability report
#        uses: github/codeql-action/upload-sarif@v3
#        if: success() || failure()
#        with:
#          sarif_file: ${{ steps.scan.outputs.sarif }}
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Build container image
        run: |
          chmod +x mvn
          ./mvnw spring-boot:build-image \
          -Ddocker.registry.username=kangmind \
          -Ddocker.registry.password=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 \
          -Ddocker.registry.protocol=https \
          -Ddocker.registry.url=ghcr.io \
          -Dimage.name=catalog-service \
          -Dimage.tag= \
          -DskipTests \
          -Dspring-boot.build-image.publish=true

#      - name: OCI image vulnerability scanning
#        uses: anchore/scan-action@v3
#        id: scan
#        with:
#          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
#          fail-build: false
#          severity-cutoff: high
#      - name: Upload vulnerability report
#        uses: github/codeql-action/upload-sarif@v3
#        if: success() || failure()
#        with:
#          sarif_file: ${{ steps.scan.outputs.sarif }}
#      - name: Log into container registry
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Publish container image
#        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}